{
  
    
        "post0": {
            "title": "Fastpages 2: reloaded",
            "content": "Ya perdí la cuenta de la cantidad de veces que he armado un sitio web para publicar posts y jupyter notebook. Esta vez espero ser más constante. Estuve averiguando sobre como funciona, y acá aprovecho de poner mis notas. . ¿Cómo funciona fastpages? . Al crear un blog con fastpages se generan 2 ramas: . En la rama master se encuentran los posts en formato markdown, jupyter notebooks o word, los archivos de configuración, y distintos archivo de html, css y javascript. | En la rama gh-pages se encuentra únicamente el html que se genera a partir del contenido de la rama master, y que se despliega como una página web en &lt;username&gt;.github.io/&lt;repository-name&gt; gracias a Github Pages (sino, se vería como el clásico repositorio de código). | . Cuando haces push de un cambio a master, se ejecutan automáticamente 3 acciones mediante github actions: . check_config.yaml: Revisa que los archivos de configuración sean consistentes y tengan la información necesaria. Esto toma usualmente unos 15 segundos. | ci.yaml: Toma unos 90 segundos en completar los siguientes pasos. Crea un ambiente linux donde se realizarán todas las operaciones. | Chequea que tengas permiso hayas definido SSH_DEPLOY_KEYS | Descarga la ultima versión del repositorio (la versión que recien pusheaste) de la rama master. | Convierte a markdown todos los archivos de jupyter notebook y word. | Descarga el tema de Jekyll minima para tener todos los html, css y javascript necesarios. | Usa Jekyll para convertir todos los markdowns a páginas web con el tema minima. | Copia el html generado a la rama gh-pages. | . | gh-pages.yaml: Revisa que todo se haya generado correctamente (creo). | Personalizando la página principal . Para personalizar la página principal, basta con modificar ./index.html. La página principal que se verá en el sitio web se genera de manera encadenada. En index.html se define que se usará el layout home.html, que a su vez define que usará el layout default.html. Es posible modificar ./layouts/home.html tomará el texto de ./index.html y lo convertirá de markdown a html, y le agregará un contenido adicional. . Personalizando el favicon . El favicon se puede modificar reemplazando directamente images/favicon.ico, o bien, editando el archivo _includes/favicons.html para definir una ruta diferente. . Es posible generar un favicon de manera gratuita en realfavicongenerator. . Agregar nuevas páginas . Para agregar nuevas páginas, basta con agregar los archivos en la carpeta _pages. Los archivos agregados pueden ser html o markdown, pero tienen la misma estructura: . layout: default permalink: /desired-path/ title: Desired Name search_exclude: true SOME TEXT IN HTML OR MARKDOWN . El layout debe ser default o uno de los layouts definidos en la carpeta _layouts. Se puede usar html o markdown, según lo que sea más conveniente usar. .",
            "url": "https://sebastiandres.github.io/blog/fastpages2/",
            "relUrl": "/fastpages2/",
            "date": " • Jul 30, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Cómo contribuir al Código Abierto",
            "content": "En un post anterior comenté de mi experiencia en el Sprint Data Umbrella. . Diría que contribuir en código abierto puede dividirse en 2 aspectos: habilitadores técnicos y conocimiento técnico. Los habilitadores son las herramientas varían según el problema que estés resolviendo, pero habitualmente involucran git, github, terminal. Muchas veces son transversales a los distintos proyectos de open source. Creo que acá hay una oportunidad para enseñar estos habilitadores. El conocimiento técnico pasa por conocer las convenciones que se estén utilizando, y dependen por supuesto del lenguaje y proyecto. Ambas parecen grandes barreras de entrada para los newcommers. . Dicen que programar es como cocinar, y que escribir código es como redactar una receta para el computador. Si eso es cierto, entonces colaborar en Código Abierto es como ayudar en un restaurant. ¡Existen muchas maneras de colaborar! . ¿Te gusta asegurarte que las personas tienen una gran experiencia? !Genial! Puedes trabajar como anfitrión/recepcionista: ayudando con la traducción, por ejemplo, en el Jupyter traducir con crowdin es rápido y no requiere conocimientos técnicos. O puedes crear o mejorar los tutoriales para explicar el uso de la librería. | ¿Recién aprendiendo? Puedes ayudar con la mise-en-place (lavar y picar verdura, preparar los ingredientes) y revisar la documentación, docstrings, agregar y clasificar issues. | ¿Eres un gran chef? Bienvenido a la cocina. Hay nuevos platos por crear y preparar: funciones por escribir y frameworks a pensar. | . El conocimiento es multidimensional. Es facil no darnos cuenta de lo mucho que sabemos al compararnos con otras personas. . [IMAGEN DE CONOCIMIENTO PERSONAL vs MUTIPLES circulos] . Al final del día, contribuir código abierto se reduce a regalar voluntariamente tu tiempo, e involucrarte en un proyecto colaborativo. Eso puede ser resolviendo un issue de tu librería favorita, ayudando a traducir (crowdin), o incluso escribiendo un simple post invitando a otros a participar ;). .",
            "url": "https://sebastiandres.github.io/blog/sprint-data-umbrella-2/",
            "relUrl": "/sprint-data-umbrella-2/",
            "date": " • Jul 26, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Experiencias del Sprint de Data Umbrella",
            "content": "Desde hace mucho tiempo tenía el deseo de contribuir “en algún momento” a un proyecto de código abierto. Sin embargo ese esquivo momento perfecto siempre era pospuesto para más adelante, cuando tuviera más experiencia y más tiempo. Por eso, cuando me contaron sobre el Sprint de Data Umbrella, no dudé y me inscribí. Era la oportunidad perfecta para obligarme a aprender. No hay nada como un poco de presión social para mover los engranajes de un procrastinador. . Para ser sincero, no ubicaba a Data Umbrella. Se trata de una organización que se preocupa de proporcionar apoyo a grupos poco representado, ya sea por género, raza, edad, orientación sexual u otros, en los campos de Machine Learning, Data Science e Inteligencia Artificial. El sprint que realizaron el 26 de Junio tenía como foco Latinoamérica, que tiene una participación baja en estos temas. . Disminuir las barreras de entrada de las fortalezas del Sprint de Data Umbrella. Tenían un checklist muy claro de temas a revisar, con videos explicando el paso a paso. Introducirse en nuevo grupo siempre es dificil, y para novatos el desafío es aún mayor. El hecho de tener un pre-sprint y post-sprint ayuda a consolidar el aspecto humano y comunitario, y resolver los problemas técnicos que siempre aparecen. El uso de discord ayuda mucho a darle una informalidad y aspecto comunitario. . Durante el sprint, el hecho de organizaros para programar de a pares también fue de gran ayuda. Con Leonardo Rocco trabajamos en 2 issues: . DOC Ensures that ARDRegression passes numpydoc validation #20381 | DOC ensures FastICA estimator pass the numpydoc validation #20405 | . ¡Ambos ya están aceptados! . Al reflexionar sobre mi experiencia en el Sprint, me doy cuenta que tenía la expectativa que me faltaban muchas cosas por aprender. . . Resumiendo, en el sprint aprendí que no era cierto que se requiere ser un super-programador para contribuir a código abierto. La realidad es que, de partida, no existe una única manera de contribuir. Hay un abanico interminable de posibles trabajos, desde los más sencillos a los más avanzados, y un largo camino de aprendizaje. Por eso, es importante darse cuenta que no se trata de que “no sabes” sino que “no sabes aún”, y que hay una comunidad dispuesta a apoyarte en ese proceso de aprendizaje. . . El trabajo de Data Umbrella con los grupos de poca representación resulta muy valioso para precisamente poder derribar todos esos mitos y barreras de entrada. . El mejor día para empezar fue ayer. El segundo mejor día para empezar es hoy. .",
            "url": "https://sebastiandres.github.io/blog/sprint-data-umbrella/",
            "relUrl": "/sprint-data-umbrella/",
            "date": " • Jul 25, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "Emulador de Linktree",
            "content": "Un directorio de enlaces permite tener entregar un link único y memorable, que puedes actualizar posteriormente a haberlo compartido. Donde, por ejemplo, al dar una charla pudiera decir “el código y la presentación estarán en este link”, pero donde posteriormente sea posible agregarle la grabación de la charla o un resultados de una encuesta. Probé con Linktree, pero pronto lo llené con demasiados enlaces y se volvió confuso y difícil de navegar. Necesitaba una forma de agrupar de manera temática y con un grado flexible de niveles de profundad. En efecto, si a alguien no le interesa el tema “X” probablemente no le interesaría el video de “X”, el código de “X”, la presentación de “X” en html o pdf. . . Formato ofrecido por linktree (izquieda) versus lo que necesitaba y que tuve que crear (derecha). Necesitaba una manera de tener un directorio de enlaces con un nombre memorable, fácil de compartir y personalizar, pero permitiendo mantener distintos niveles de agrupación. Desafío adicional: Cuando se trata de recursos en línea, soy un tacaño extremo. Así que buscaba una solución que pudiera implementar sin costos mensuales recurrentes. . Como tacaño extremo llegué a pensar en hacer varias cuentas en linktree y vincularlas entre sí, pero no era una solución escalable (y tendría que acordarme de que correo y password usé para cada enlace). Así que entre una mezcla de vergüenza y flojera terminé desechando la idea. La solución me llegó de golpe. Github permite mostrar páginas html estáticas. ¡Podía hacer una página html simple que emulara a linktree y que podía guardar en cada repositorio en github! El enlace central seguiría siendo en linktree (lintr.ee/sebastiandres en mi caso) y los enlaces serían a los htmls plano de cada repositorio de github. Es una buena mezcla, porque linktree es bastante amigable y tiene algunas herramientas de administración como activar/desactivar enlaces. Comencé revisando el código de linktree, pero era excesivamente largo y confuso. Así que puse manos a la obra y me puse a construir una solución de manera incremental. . Primera versión: Un único archivo html, simple y funcional. Imita los colores y botones sólo con html y css, sin javascript, incluyendo la animación del botón. Comienzo a desplegarlo en mis repositorios y enlazarlos desde linktree. Basta con activar cada repositorio como github pages para que github proporcione un enlace fijo y estable para index.html (o README.md). No es perfecto, pero funciona, ya se cumple el funcionamiento mínimo. Problemas detectados: el tipo y tamaño de fuente es similar pero no es correcto. El despliegue en un smartphone es muy distinto entre linktree y imitación (tacaña). | . . Segunda versión: Después de googlear, aprendí a manejar css selectivo usando @media (orientation: landscape/portrait). Problemas detectados: Todavía se ve un poco diferente, sobre todo en los márgenes y tamaño del botón. Al ir actualizando en mis repositorios esta segunda versión, me doy cuenta que es difícil recordar y distinguir visualmente cuál es la versión actual. Sería interesante tener algún tipo de indicador visual al respecto. Tercera versión: Ajustes a las propiedades del css para imitar mejor linktree (width, height, text wrapping, font sizes). Incluye un texto con la versión para distinguir la versión utilizada en cada repositorio y hacer más fácil la actualización. Problemas detectados: Los textos no están centrados adecuadamente. Lo peor es tener que ir copiando manualmente el nuevo estilo a cada repositorio en cada nueva actualización. Lo ideal es que el estilo se manejara centralmente y actualizara automáticamente a todos los repositorios que lo utilizaran. . | Cuarta versión: En lugar de tener el css directamente en el html, lo muevo a un archivo css. De esa manera, todos los archivos pueden llamar a ese archivo. Eso permite separar contenido de formato. Esta cuarta versión me dio muchos problemas. En local todo funcionaba bien, pero github no desplegaba bien la página por un problema con el MIME type del archivo css. Así que tuve que usar https://raw.githack.com para obtener un enlace del css con el MIME type correcto. Problemas detectados: La actualización de css con github a través de https://raw.githack.com tiene un lag importante, a veces de horas, por lo que es difícil (y frustrante) comprobar si el cambio resultó bien. . | Quinta versión: Comienzo a utilizar DigitalOcean para levantar un sitio estático a partir del repositorio en github. De esa manera, se generan urls fijas de los assets (css o eventualmente javascript) que se actualizan automáticamente con cada push a github, sin costo asociado y con el MIME type adecuado. Eso permite tener un enlace estable para css y html que puede utilizarse en los repos de github. Ahora también externalizo la “versión” del archivo, para que sea importado por el archivo. Estos archivos css y html ahora se llamarán siempre “latest_style.css” y “latest_copyright.html”, y que actualizo con cada cambio de versión. Así el archivo final se actualiza automáticamente cuando hay algún cambio (¡¡¡no más cambios masivos en los repos!!!). Se definen también algunas clases adicionales para manejar títulos y subtítulos. Problemas detectados: En general se observa bien, pero hay algunos glitchs de tamaño de fuente, textos centrados y detalles así. . | . * Sexta (y última) versión: Revisión general del código para optimizarlo y limpiarlo. Se eliminan algunas propiedades css innecesarias. Hay 3 archivos: El archivo principal es index.html donde se definen los enlaces, y se utilizan los archivos latest_style.css (estilo) y latest_copyright.html (versión de emulador). Cada nueva página con enlaces sólo necesita definir los enlaces, ¡el estilo y copyright ya está definido! Problemas detectados: Nada por ahora. . . Sneak peak: . ¿Cómo es el código? La primera versión mezcla el código y el estilo. Hace que actualizar múltiples archivos sea tedioso y propenso a errores (pero fue una versión rápida de desarrollar y autocontenida). . &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;style&gt; html {background-color:#3d3b3c; font-family: Karla, sans-serif; font-size: 16px; font-weight: 700;} h3, h2, h1 { color:#ffffff; margin-bottom: 16px; text-align: center;} div {position: fixed; top: 25%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%);} a {text-decoration: none!important;} p {background-color:#ffffff; color:#3d3b3c; line-height: 56px; width: 676px; border: 2px solid rgb(255, 255, 255); margin-bottom: 16px; text-align: center;} p:hover {background-color:#3d3b3c; color:rgb(255, 255, 255);} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt; &lt;h1&gt;Emulador de Linktree&lt;/h1&gt; &lt;h3&gt;Enlaces&lt;/h3&gt; &lt;a href=&quot;https://linktree-ixkge.ondigitalocean.app/demo1.html&quot; target=&quot;_blank&quot;&gt; &lt;p&gt;Primera versión&lt;/p&gt; &lt;/a&gt; &lt;a href=&quot;https://linktree-ixkge.ondigitalocean.app/demo6.html&quot; target=&quot;_blank&quot;&gt; &lt;p&gt;Última versión&lt;/p&gt; &lt;/a&gt; &lt;h3&gt;Enlaces&lt;/h3&gt; &lt;a href=&quot;https://linktr.ee/sebastiandres&quot;&gt; &lt;p&gt;⇦ linktree&lt;/p&gt; &lt;/a&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . La última versión permite cambiar el estilo y copyright de manera centralizada, y preocuparse únicamente del contenido. . &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Karla:wght@300;400;600;700&amp;amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt; &lt;link href=&quot;https://linktree-ixkge.ondigitalocean.app/latest_style.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt; &lt;h1&gt;Emulador de Linktree&lt;/h1&gt; &lt;h3&gt;Enlaces&lt;/h3&gt; &lt;a href=&quot;https://linktree-ixkge.ondigitalocean.app/demo1.html&quot; target=&quot;_blank&quot;&gt; &lt;p&gt;Primera versión&lt;/p&gt; &lt;/a&gt; &lt;a href=&quot;https://linktree-ixkge.ondigitalocean.app/demo6.html&quot; target=&quot;_blank&quot;&gt; &lt;p&gt;Última versión&lt;/p&gt; &lt;/a&gt; &lt;h3&gt;Enlaces&lt;/h3&gt; &lt;a href=&quot;https://linktr.ee/sebastiandres&quot;&gt; &lt;p&gt;⇦ linktree&lt;/p&gt; &lt;/a&gt; &lt;/div&gt; &lt;!-- Version - dont change this code--&gt; &lt;object data=&quot;https://linktree-ixkge.ondigitalocean.app/latest_copyright.html&quot; width=100%&gt;&lt;/object&gt; &lt;/body&gt; &lt;/html&gt; . ¿Y cómo se ve todo al final? Se ve así: . . Aprendizajes: . La separación de contenido y forma es esencial para poder ahorrar trabajo. Incluso para un proyecto pequeño como éste, ayuda enormemente a no duplicar trabajo y hacer más fácil las actualizaciones de N páginas. . La primera versión, que tenía el 80% de las funcionalidades me tomó el 20% del tiempo invertido. Pero el 80% del tiempo restante me enseñó muchas cosas que no sabía de html y css, mime types, y fue muy valioso. . Crear Github pages por cada repositorio es muy práctico, pero tiene ciertas limitaciones para que la gente no abuse al crear páginas estáticas y sea utilizado como un webserver gratis. Existen algunos sitios para entregar css y javascript con el MIME type correcto (https://raw.githack.com por ejemplo), pero no se actualizan automáticamente. DigitalOcean permite levantar sitios estáticos a costo cero y con actualización automática, y poder tener todo sincronizado. . Enlaces de interés: . https://linktr.ee/sebastiandres: Mi directorio de enlaces, el sitio que quería imitar. linktree-ixkge.ondigitalocean.app: Sitio web estático, sirve como demo de “cómo se vería” y para almacenar/enlazar el css y copyright. | https://github.com/sebastiandres/linktree: Repositorio con las distintas versiones del código. Puedes tomar la última versión de html, css y copyright y personalizarlo a tu antojo. | ¿Cosas por mejorar? ¡Muchas! ¡Sugerencias y comentarios bienvenidos! | .",
            "url": "https://sebastiandres.github.io/blog/linktree/",
            "relUrl": "/linktree/",
            "date": " • Jun 1, 2021"
        }
        
    
  
    
        ,"post4": {
            "title": "El detective: entre la lógica y el azar",
            "content": "Cuando pensamos en Sherlock Holmes, nos imaginamos al famoso detective resolviendo el misterio desde la comodidad de su casa, sin dejar de fumar su pipa o derramar una gota de su té de Ceylán, gracias a su portentoso cerebro. No hay nada de suerte en su implacable y fría lógica… en apariencia. . El término serendipia viene del inglés serendipity. No es por azar que suene mejor en español que en inglés, si consideramos que proviene de serendip, una palabra de origen árabe al igual que tantas otras de igual origen que han enriquecido el idioma español. El escritor y político inglés Horace Walpole acuñó la palabra serendipity en honor al cuento “Three Princes of Serendip” hace más de 250 años. El reino de Serendip que da origen al cuento, actualmente Sri Lanka o Ceylán, es una isla al sur de India. En el relato, tres príncipes son injustamente acusados de un robo, al haber deducido múltiples cualidades de ciertos objetos robados. No daré más detalles para no arruinar una historia entretenida que recomiendo leer. La palabra serendipia terminó entonces denominado un “descubrimiento afortunado e inesperado que se logra cuando se está buscando una cosa distinta”, o como diríamos más informalmente, un chiripazo. Se citan como ejemplos de serendipias, el descubrimiento de la Penicilina, de los post-its, el principio de Arquímides y el Tefón, entre otros. . Sin embargo en el cuento de los tres príncipes de Serendip, no interviene la suerte: los hermanos describen las cualidades de lo robado mediante un proceso de deducción no muy distinto al que usarían otros famosos detectives. Más aún, hay quienes postulan que dicho cuento fue fuente de inspiración para Voltaire en su novela Zadic, que a su vez, podría haber inspirado a Edgar Allan Poe para “Asesinatos de la Rue Morgue”, iniciando el género de la novela policial. . De este mismo cuento, surgen entonces 2 dimensiones contrapuestas: por una lado, la suerte y, por el otro lado, la lógica. La disonancia es sólo aparente. Consideremos un extracto de “El sabueso de los Bakersville”: . Estamos entrando en el terreno de las conjeturas -dijo el doctor Mortimer. . Digamos, más bien, en el terreno donde sopesamos posibilidades y elegimos la más probable. Es el uso científico de la imaginación, pero siempre sobre una base material sobre la que apoyar nuestras especulaciones.- respondió Sherlock.” . El sabueso de los Baskerville — Arthur Conan Doyle. . Sherlock (y todo buen detective) sabe que para una misma evidencia pueden existir múltiples explicaciones, algunas más plausibles que otras. Las probabilidades le permiten saber cuál es la causa más probable, y nueva evidencia le permite confirmar o descartar algunas de las hipótesis. Es el método científico en su plena expresión. . Supongamos que para un crimen existen 4 posibles culpables con una cierta estimación de culpabilidad considerando la evidencia actual: Alicia (24%), Bob (24%), Carlos (49%) o David (3%). Sin duda nos inclinaríamos por creer que Carlos es el culpable pues tiene más del doble de probabilidad que los otros 3 sospechosos. Sin embargo, es más probable que no sea culpable (24%+24%+3%=51%) a que sí lo sea (49%). Por supuesto, no podemos aún probar la culpabilidad de Carlos, pero el curso de acción más razonable es investigar más profundamente a Carlos para confirmar o refutar la hipótesis de su culpabilidad. Si finalmente se encuentra más evidencia y acertamos en que Carlos era el culpable, hemos de admitir entonces que hemos tenido un grado de suerte pues otros escenarios eran también admisibles (incluso más probables). Es la mezcla de análisis deductivo, búsqueda dirigida y suerte la que termina por llevar al éxito. . En resumen, existe serendipia o chiripa en el proceso deductivo. Si bien se elige mediante lógica la opción más probable, y sobre ésta se prosigue la investigación hasta agotar posibilidades, existe algo de suerte en que la explicación inicial sea la correcta, en lugar de otras menos probables (con la información inicial), y en el descubrimiento de nuevas pistas y evidencias. . Como dijo Louis Pasteur: “La suerte favorece a la mente preparada”. .",
            "url": "https://sebastiandres.github.io/blog/policial/comentario/2021/01/23/detectives-y-azar.html",
            "relUrl": "/policial/comentario/2021/01/23/detectives-y-azar.html",
            "date": " • Jan 23, 2021"
        }
        
    
  
    
        ,"post5": {
            "title": "Los Tres Príncipes de Serendip",
            "content": "Érase una vez, en el reino de Serendip, un sabio y poderoso rey llamado Giaffer. Tenía tres hijos a los que amaba mucho, y quería dejarles, no sólo su reino, sino que todos los conocimientos y virtudes que debían tener los gobernantes de un gran reino. Así que reunió a grandes eruditos de todo su reino, cada uno con una especialidad diferente, y los puso como tutores de sus hijos. El rey pidió a cada uno que instruyera a los príncipes tan bien que cualquier experto que los encontrara reconocería de inmediato quién era su maestro. Y así lo hicieron los tutores. . Debido a que todos los príncipes eran muy inteligentes, les llevó poco tiempo convertirse en expertos en ciencia, lenguaje, filosofía y todas las demás materias que estudiaron, y pronto estaban mucho más informados que cualquier otro joven príncipe o noble del mismo país, edad y rango. Los tutores informaron al rey sobre el gran progreso que habían hecho los príncipes. El rey estaba un poco escéptico de que los príncipes pudieran haber adquirido tanto conocimiento tan rápido, así que decidió ponerlos a prueba. . En reunión privada con su hijo mayor, el rey le dijo: “Hijo mío, sabes cuánto tiempo he gobernado este reino y cuánto me he esforzado por cuidar a mis súbditos y gobernarlos con amor y misericordia, así como con justicia. Pero ahora estoy envejeciendo y siento que es hora de concentrarme en mi viaje al otro mundo. He decidido retirarme a un monasterio, para pasar el resto de mis días meditando y orando por mis pecados. Eres mi hijo mayor, y por eso te dejo el reino.” . El hijo mayor se inclinó ante su padre y dijo: “Padre y rey mío, aunque comprendo sus deseos, sé que todavía puede gobernar bien este reino y, con la gracia de Dios, oraré para que pueda hacerlo por muchos más años. Aunque estoy dispuesto a obedecerle en todo lo que me pida, mientras usted esté vivo y saludable, no sería apropiado que yo lleve la corona. Sólo cuando asciendas a tu merecido lugar en el cielo, me ocuparé del reino y trataré de gobernar con tanta sabiduría y justicia como tú ”. . El rey estaba complacido con la respuesta de su hijo, que mostró sabiduría y humildad. Pero ocultó sus sentimientos y le dijo a su hijo que se retirara. Luego llamó a su segundo hijo y le hizo la misma propuesta. El segundo hijo también se negó y agregó: “¿No debería mi hermano mayor ser el gobernante después de ti?” El rey volvió a ocultar sus sentimientos y llamó a su tercer hijo, quien también se negó, recordándole a su padre que sus dos hermanos mayores tenían precedencia en el trono antes que él. . El rey estaba satisfecho con los aprendizajes de sus hijos. Decidió que, para completar su educación, los haría viajar por el mundo para que tuvieran experiencias de la vida real además de los conocimientos adquiridos de los libros y sus maestros. Llamó a sus hijos y fingiendo estar enojado, les dijo: “Me han desobedecido y se negaron a mis deseos. Están expulsados del reino. Salid.” . Los príncipes estaban sorprendidos y herido, pero amaban a su padre, y él era el rey, así que los tres recogieron algunas cosas y dejaron el reino. Continuaron viajando hasta llegar a otro reino, gobernado por un gran emperador llamado Beramo. Mientras viajaban por la carretera hacia la capital imperial, se encontraron con un comerciante cuyo camello se había escapado. El comerciante preguntó a los príncipes si habían visto su camello en el camino. . El primer hijo le preguntó: “¿Tu camello estaba ciego de un ojo?” . “Pues sí,” dijo el hombre. . “¿Y le faltaba un diente?” preguntó el segundo hijo. . “Sí”, dijo el hombre. . “¿Y también estaba cojo?” preguntó el tercer hijo. . “¡Sí!” el hombre dijo. . “¿Su camello tiene una carga de mantequilla en un lado y una carga de miel en el otro?” preguntó dijo el primer hijo. . “¡Así es!”, contestó el comerciante. . “Además, lleva a una mujer en la espalda”, dijo el segundo hermano. . “Y ella está embarazada”, agregó el tercer hermano. . “Sí, ese es mi camello y mi mujer” dijo el hombre. . “Pues no lo hemos visto” dijeron los príncipes y continuaron su rumbo. . El comerciante pensó que la única forma en que los hermanos podrían haber sabido tanto sobre el camello desaparecido que lo hubieran robado y escondido ellos mismos. Entonces el hombre fue al juez, acusando a los hermanos de haberle robado su camello, y el juez hizo que los arrestaran y los metieran en la cárcel. Al día siguiente, el propio emperador escuchó el caso y los condenó a muerte. . Por suerte para ellos, alguien encontró al camello y la mujer, dando aviso al comerciante. El hombre volvió a la corte y con humildad reconoció haber encontrado su camello y que los tres hombres eran inocentes. El emperador los hizo soltar y los llamó a su presencia. Preguntó a los hermanos cómo habían conocido tantos detalles sobre un camello que nunca habían visto. . El primer hermano dijo: “Me di cuenta de que la hierba sólo se había comido en un lado del camino, aunque la hierba del otro lado era de mejor calidad. Así que llegué a la conclusión de que el camello no debía ver bien del lado del camino donde la hierba era buena”. . El segundo hermano dijo: “Me di cuenta de que entre la hierba estaba cortada a ras, pero que quedaban algunas briznas completamente sin morder, por lo que el camello debía tener un diente faltante”. . El tercer hermano dijo: “Y supe que el camello debía estar cojo, porque observé las huellas de tres patas de camello junto con la huella de un pie que se arrastraba”. . El emperador estaba asombrado e impresionado, y quería saber más. “¿Cómo supieron los otros detalles?” les preguntó. . El primer hermano dijo: “Supuse que el camello debe llevar mantequilla por un lado y miel por el otro, porque en un lado del camino noté un rastro de hormigas, que aman la grasa, y en el otro lado noté un gran número de moscas, que aman la miel”. . El segundo hermano dijo: “Supuse que el camello llevaba a una mujer, porque en un momento vi marcas que indicaban que el camello se había arrodillado, y cerca vi una pequeña huella humana, que podría ser una mujer o un niño. Había orina cerca, y cuando la olí, sentí un arrebato de lujuria, así que estaba seguro de que la huella debía ser la de una mujer”. . El tercer hermano dijo: “Y supuse que la mujer debía estar embarazada, porque vi huellas de manos, lo que indica que la mujer tenía que ayudarse a levantarse con las manos después de orinar”. . El emperador quedó tan impresionado con la inteligencia y las habilidades de observación de los hermanos que les rogó que se quedaran como sus invitados por un tiempo. Les proporcionó las mejores habitaciones del palacio, y todos los días se entretenía con ellos, discutiendo una variedad de temas diferentes y disfrutando de su inteligente conversación. . . Traducido y editado con libertad de esta versión del cuento en inglés: link. . Este cuento persa es considerado uno de los primeros cuentos de deducción lógica. En comento más al respecto. .",
            "url": "https://sebastiandres.github.io/blog/markdown-test/",
            "relUrl": "/markdown-test/",
            "date": " • Jan 22, 2021"
        }
        
    
  
    
        ,"post6": {
            "title": "No fallar rápido; Sí aprender rápido",
            "content": "En el mundo de startups hay un consejo que dice “Fallar rápido” (Fail fast). Tiene como sentido el no tener miedo a fallar, y a intentarlo hasta lograrlo. Sin embargo, el consejo es engañoso. El tema no es fallar rápido, sino aprender rápido. De lo contrario, se seguirá fallando. De hecho, para llegar a crear algo completamente innovador siempre se pasa por momentos de aprendizaje (no necesariamente fracasos). Hay 3 gráficos que muestran esto: . Efecto Dunning-Kruger | El valle inquietante | Hype Cycle. | . Efecto Dunning-Kruger . Grafico . El efecto Dunning Kunning puede resumirse como la incapacidad de reconocer las limitaciones. la tendencia a sobreestimar las habilidades o conocimientos, debido precisamente al poco conocimiento de la dificultad de la tarea. . El valle inquietante . Hype Cycle . Conclusión . Si bien existen diferencias, en los 3 gráficos observamos un ascenso inicial, una brusca caída, una fase de recuperación y una estabilización en una fase final. No hay atajos, es necesario pasar por la fase de aprendizaje para llegar a la fase final. .",
            "url": "https://sebastiandres.github.io/blog/opini%C3%B3n/startup/tecnolog%C3%ADa/2020/04/24/learn-dont-fail.html",
            "relUrl": "/opini%C3%B3n/startup/tecnolog%C3%ADa/2020/04/24/learn-dont-fail.html",
            "date": " • Apr 24, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "La rutina óptima es aburrida",
            "content": "Nadie es perfecto. Es difícil ser un ultra-maratonista, fundador de startup, medallista fields y nobel, buen padre y buen esposo. Probablemente también es aburrido, pero estoy muy lejos como para saberlo. Hacer todas las tareas diarias que deberíamos no es fácil, y mantener una rutina es -aceptémoslo de una vez por todas- aburrido. Esto hace que frecuentemente sintamos que no estamos avanzando en la vida. . Una aproximación más realista y efectiva es tener una rotación de rutinas. Ponerse un objetivo y una cierta cantidad de tiempo. Enfocarse y obsesionarse hasta lograr ese único objetivo. Algunas ideas: . Aprender portugués en 2 meses. | Tomar todos los cursos de Deep Learning que puedas en coursera por 3 meses. | Hacer una página web y escribir 10 posts en 6 semanas. | Mirar en netflix el top 20 de películas en IMBD en 2 meses. | Hacer una rutina de deporte durante 4 semanas. Meditar a las 6 am todos los días por un mes. | . Tener una rutina óptima está sobrevalorado. Hacer cambios seguidos es más natural y siempre más entretenido. La clave es hacerlo deliberadamente, y no al azar. .",
            "url": "https://sebastiandres.github.io/blog/rutina-optima/",
            "relUrl": "/rutina-optima/",
            "date": " • Mar 26, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "Pycon Colombia 2020 - Las charlas",
            "content": "Hace algún tiempo hice un post con los keynotes de la PyCon Colombia 2020. Ahora es el turno de las charlas. Para cada speaker, se pone el enlace al video, a las slides, un repositorio y twitter, si existen. . Viernes 7 Febrero | La mañana . Mauricio Collazos - Hablemos de voz : video / slides / repo / twitter | Carlos Villavicencio - Type Driven Development: video / slides / repo / twitter | Jesús Solano - Movie Genre Classification Using Deep Multimodal Neural Networks: video / slides / repo / twitter | Jonathan Vallejo Muñoz - Como migrar mi proyecto de Python 2 a Python 3: video / slides / repo / twitter | Jose Benitez - The road so far on building a web platform for drones: video / slides / repo / twitter | Javier Vergara - Tumaini: A Deep learning object detection API integrated to an android app, case of study in banana disease detection: video / slides / repo / twitter | Flavio Percoco - Inheriting code, and I don’t mean classes: video / slides / repo / twitter &amp;star; RECOMENDADO &amp;star; Jose Zapata - Comprensión de la música con Python, una mirada desde la Física y la Matemática: video / slides / repo / twitter &amp;star; RECOMENDADO - USA JUPYTER LAB Y RISE &amp;star; | Milton Lenis - Debugging: A senior’s skill: video / slides / repo* / twitter* &amp;star; RECOMENDADO &amp;star; | . Viernes 7 Febrero | La tarde . Waldemar Lopez - Representación vectorial de nombres de dominio de Internet mediante técnicas de word embeddings: video/ slides / repo / twitter | Kevin Hernández - Y is X but X is not always Y: An introduction to Python internals: video/ slides / repo / twitter &amp;star; RECOMENDADO &amp;star; | Oscar Cortez - Modern Python packaging without pain: video/ slides / repo / twitter | . Sábado 8 Febrero | La mañana . Miguel Cabrera - Time Series Forecasting using Machine Learning: video/ slides / repo / twitter | Andrés Torres Cano - Programación en paralelo con Python: sácale jugo a los núcleos de tu computadora: video / slides / repo / twitter | Kevin Sarmiento Mendoza - Building a Scalable Food Delivery Service Using ElasticSearch Geo Queries: video / slides / repo / twitter &amp;star; RECOMENDADO &amp;star; | Miguel Bolivar Portilla - It takes some engineering to serve 41679 users: video / slides / repo / twitter | Nick Sweeting - Archiving the Internet Before it All Rots Away : video / slides / repo / twitter* &amp;star; RECOMENDADO &amp;star; | Luis David Camacho Gonzalez - High Performance Pandas 2: Time series data analysis: video / slides / repo / twitter | Gustavo Angulo Morales - Antes mi servicio se demoraba 5 seg y ahora 300 miliseg, veamos que es profiling en diferentes capas, Base de datos, aplicación, cache, mobile, para llevar a tus aplicaciones a otro nivel de velocidad: video / slides / repo / twitter | Carlos Patiño - Probabilistic Programming: Using Python to Simplify Statistical Inference: video / slides / repo / twitter | Camilo Cardona - Desarrollo de Dashboards interactivos en Jupyter para personas desinteresadas en interfaces gráficas: video / slides / repo / twitter &amp;star; RECOMENDADO - USA JUPYTER LAB Y RISE &amp;star; Otra charla de contenido similar | Carlos de la Torre (y Rodolfo Edelmann) - Conectando microservicios con Python: video / slides / repo / twitter | . Sábado 8 Febrero | La tarde . Jesus Anaya Orozco - Prueba tu código con PyTest: video / slides / repo / twitter | Ben Dechrai - My voice is my passport. Verify me?: video / slides / repo / twitter | Angel Galicia - Procesamiento de datos en sistemas distribuidos con python: video / slides / repo / twitter | Felipe dos Santos de Morais - AfroPython: Empowering black people using Python in Brazil: video / slides / repo / twitter | Galoget Latorre - Hacking Ético con Python: video / slides / repo / twitter | Sebastián Flores - Presentaciones y encuestas interactivas en jupyter notebooks y RISE: video / slides / repo / twitter | Maria Remolina - Breaking the Enigma: what if Turing had Python?: video / slides / repo / twitter | Manuel Alvarado Cobo - Ocultando datos en datos: video / slides / repo / twitter | . Otros . Creo que estas finalmente no se dictaron: . José Laica Cornejo - Creando aplicaciones de MicroPython para módulos ESP01 y ESP32: video / slides / repo / twitter | Sebastian Arango - Enhancing Data Privacy through Federated (Machine) Learning: video / slides / repo / twitter | Kevin Patrón - A Python library for Teaching-Learning-Based Optimization: video / slides / repo / twitter | Yilsey Benavides Miranda - Máquinas de aprendizaje para analis de datos geoespaciales en procesos de identificación de cobertura terrestre e índices: video / slides / repo / twitter | Andrés Gonzalez - IDK: Connecting APIS, developers, bots and customers with Django, Channels and VueJS: video / slides / repo / twitter | .",
            "url": "https://sebastiandres.github.io/blog/pycon/charlas/2020/03/24/pycon-colombia-charlas.html",
            "relUrl": "/pycon/charlas/2020/03/24/pycon-colombia-charlas.html",
            "date": " • Mar 24, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "Blog en github.io",
            "content": "Aún no termino de traducir los posts “originales” y ya estoy pensando en el próximo post. Es un buen signo de que el nuevo sistema es más fácil de usar. . Al seguir las instrucciones para configurar fastpages, pide que el repositorio no sea “github_username.github.io”. En mi caso y después de algunas pruebas, me incliné por “blog”, por lo que el blog queda en https://sebastiandres.github.io/blog/. Sin embargo, me pareció que rompe la expectativa tradicional, puesto que https://sebastiandres.github.io/ arroja un error (página 404-no encontrada). . . Se me ocurrió que una forma fácil de solucionar lo anterior es tener un repositorio “github_username.github.io”, en mi caso sebastiandres.github.io, y que contuviera una página html que redirigiera a https://sebastiandres.github.io/blog/. Un “hack” de 2 minutos y que permite responder a la expectativa, sin mayores dolores de cabeza de configuración o código: . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Refresh&quot; content=&quot;0; url=https://sebastiandres.github.io/blog/&quot; /&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Redirigiendo al &lt;a href=&quot;https://sebastiandres.github.io/blog/&quot;&gt;blog&lt;/a&gt;.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; .",
            "url": "https://sebastiandres.github.io/blog/fastpages/2020/03/10/Redirect.html",
            "relUrl": "/fastpages/2020/03/10/Redirect.html",
            "date": " • Mar 10, 2020"
        }
        
    
  
    
        ,"post10": {
            "title": "Keynotes de la PyCon 2020 Colombia",
            "content": "“Came for the language, stayed for the community” - Brett Cannon . Todos los keynote speakers recalcaron la importancia del trabajo en equipo y la colaboración de la comunidad de Python, como refleja la frase de Brett Cannon de la PyCon US del 2014. Los principales elementos comunes fueron: . Comunicación, inclusión y mentoring: La comunidad de python es un ejemplo de que la colaboración puede más que la competencia. Andrew mencionó la importancia de una buena comunicación entre equipos de ingeniería. Fernando habló del valor de la comunidad y de haber tenido buenos mentores. Emily mencionó lo importante de tener una comunidad receptiva y que potencie nuevos miembros. | Documentación y respaldos:La documentación es crucial para facilitar la colaboración de las comunidades, y para respaldar hacia el futuro: lo que no se documenta se pierde. Emily mencionó que “Documentar es ahorrar dinero”, y que es un esfuerzo necesario. Esto lo mencionó también Nick Sweeting en una charla: damos por sentado que todo lo que leemos hoy estará disponible en todos lados y en el futuro. Respaldar es importante. | Sobre el fracaso: Todos tenemos nuestros fracasos. Hacerlos visibles es importante para mostrar a otros que es normal, y que forma parte del crecimiento y aprendizaje. Fernando mencionó ejemplos de sus fracasos (desconectar el internet en todo Colombia, un curso práctico de computación fallido). Emily habló de sus inseguridades, la falta de confianza para abordar desafíos y de la necesidad de salir de la zona de confort. | Andrew Godwin @andrewgodwin . The Scientist and the engineer: slides original / slides respaldo . TLDR; Los sistemas actuales son demasiado grandes para una sola persona. La comunicación y delegación son parte crucial de la ingeniería. | “Computer science is no more about computers than astronomy is about telescopes” — Edsger Dijkstra. | “In theory there is no difference between theory and practice. In practice there is” — Benjamin Brewster. | “A ship in port is safe, but that’s not what ships are built for”— Grace Hopper | The real world is messy. Cosmic ray affects RAM and quantum tunneling affects CPUs. Python is a balanced language to deal with a messy world. | Learn when and how to forget. You can’t remember all the details all the time. Besides, it’s inefficient. Abstract - Verify - Forget. | Scientists observe and question: They are always asking “why?” and “how?”. Engineers build and invent: they look at a question and think of solutions. Be the scientist and the engineer: Model your systems. Ask the tough questions. Build them for the real world. | . Sarah Guido @sarah_guido . Data Science Retrospective: slides original / slides respaldo . TLDR; La industria siempre creará hype. Lo que no cambia (ni cambiará) es que los datos nunca serán perfectos. | What’s the definition of Data Science? Using data to drive business outcomes! Specialized roles are now required: data engineer, machine learning engineer, business intelligence engineer, data analyst, decision scientist, data science engineer, product scientist and more. | Learning data science has evolved. Before: no college programs, few bootcamps, early days for Coursera, Codecademy, etc. Today: Lots of free &amp; open source material, (too) many bootcamps and university programs, not so free resources like Coursera, documentation has improved. | Lots of new and cool tools: docker, spark, AWS cloud tools, Zeppelin, Sagemaker, dasboarding tools (Looker, Mode, Periscope, Amplitude). Most tools have a python API! Job offers for data science ask for: Python or R, SQL, basic knowledge of statistics and Machine Learning, data intuition, ability to communicate and to be independent. Communications is a must. | Data in the wild is still messy: and that’s not ever going to change. | . Wes McKinney @wesmckinn . Python for Data Analysis: Past, Present, and Future: slides original / slides respaldo . TLDR; El crecimiento de python se debe a una tormenta perfecta de librerías, y el éxito de pandas a que puede leer csv (entre otras cosas). | Pandas first version still at Pypi: https://pypi.org/project/pandas/0.1/. | Wes is no longer working on pandas since 2013, don’t insist! Python growth is due to several things, pandas being one of them. There was the need of data wrangling, and there was a “perfect storm” of packages. And packaging of libraries was improved. | The success of pandas, mostly due to being able to read csv. Python being readable makes everyone can contribute. The new pandas logo is an example of non cs contributions with huge impact See: “PyData NYC 2013: 10 Things I Hate About pandas” | Pandas has taken responsability of too many things. It is more productive to have a common computational framework to . This is why Apache Arrow is “a common standard designed for speed, for data processing libraries”. It should be CPU/GPU friendly, memory map huge datasets, and relocate data structures without serialization. | Reflexión personal: en 10 años parecerá natural que exista un estándar para dataframe data. ¿Se imaginan lo complejo e ineficiente que sería si cada lenguaje manejara un estándar distinto de chars, enteros y flotantes? | . Ines Montani @_inesmontani . The Future of NLP in Python: slide original / slide respaldo . TLDR; Lo más dificil es tener buenos sets de datos. Es necesario crear software que nos ayude con eso. | Skills are tree shaped: There’s overlap and branches can grow into empty spaces. | spaCy: Open-source library for industrial-strength Natural Language Processing. | Prodigy: Annotation tool for creating training data for machine learning models. | Thinc: Lightweight deep learning library for composing models with a functional type-checked API | Why python? general purpose better than specialized “AI language” &amp; easier for developers. Your team needs specialist, generalists and complementary. | Problem 1: Connecting layers in DL is hard. Matrix dimensions must match, and it’s not straightforward. Thic allows to simplify to unblock developer experience to unlock productivity. | Problem 2: Dependencies and configuration is a nightmare. You need to close the gap between prototype &amp; production. | Problem 3: We needed something so we built it. | Problem 4: It all depends on the data. It’s better to pay someone on your team to precisely gather/create the data you need. Move fast and train things. Have several models and choose based on results. | . Emily Morehouse @emilyemorehouse . We go further together: slide original / slide respaldo . TLDR; nadie es perfecto todo el tiempo, incluso los python core developers tienen dudas y han superpuesto al síndrome del impostor. Todos pueden contribuir, y la documentación está subvalorada. | Walrus operator := allows to assign and return value. This was hugely polemic. People are afraid to change. But people is the community. | If you’re bored in tech, you’re not working on the right things. | Writing documentation is hard! You have the bias of not having fresh eyes. | Time is money. Documentation saves time. Ergo, documentation saves money. | Mentoring is crucial. Reach out to others, and to overcome impostor syndrome. | . Fernando Perez @fperez_org . Jupyter, física y comunidades abiertas: slides original / slides respaldo . TLDR; El trabajo en comunidad es muy importante. La comunidad de python y de python científico comparten valores y han aprendido de manera recíproca. Fernando desconectó un cable para prestarlo y dejó sin internet a toda Colombia por algunas horas. | La gente se sorprende de la comunidad de python: mucha colaboración, no hay envidias ni competencias, a diferencia de conferencias de otras áreas. | IPython partió como un hack de una tarde, y se juntó con otros 2 proyectos que tenía funcionalidades similares (Interactive Python, Lazy Python). | Mail original anunciando IPython: link | Fue crucial encontrar apoyo y colaboradores en el camino: Eric Jones (Enthought), Scipy, John Hunter (matplotlib), Tarvis Oliphant (numpy — scipy), Wes McKinney (pandas) y muchos más, además del apoyo de la comunidad de python (Guido et al.). La comunidad de python científico persigue los ideales de la ciencia: (1) la búsqueda de conocimiento verificable (2) reproducibilidad (3) esfuerzo colectivo en beneficio de la humanidad. | Toda contribución tiene valor, y las necesitamos a todas: diversidad geográfica, cultural, lingüística, etc! | ¿Impacto generado? Agujeros negros! LIGO 2015 (Nobel 17), primera imagen de un agujero negro 2019 (Nobel ?). | Cool stuff: Pangeo — volúmenes ridículamente grandes de datos geológicos, ICESat (icepyx), simpeg, GeoSci.xyz, JupyterBook, cursos de ciencias de datos en Berkeley +2000 alumnos simultáneos, | Hay un libro sobre como usar Jupyter como herramienta pedagógica: libro. | .",
            "url": "https://sebastiandres.github.io/blog/pycon/keynote/2020/02/11/medium-pycon.html",
            "relUrl": "/pycon/keynote/2020/02/11/medium-pycon.html",
            "date": " • Feb 11, 2020"
        }
        
    
  
    
        ,"post11": {
            "title": "Elon Musk y Jack Ma",
            "content": "En Agosto del 2019 Elon Musk y Jack Ma sostuvieron un panel intercambiando opuestas opiniones en el contexto del World Artificial Intelligence Conference. Los temas que los CEOs de Space X &amp; Tesla y Alibaba&amp;Aliexpress seleccionaron fueron los siguientes: Inteligencia Artificial, Marte, Trabajo y Educación. El panel dura cerca de 46 minutos y fue interesante porque Elon y Jack tienen opiniones bastante distintas y no lo disimularon. . Round 1: Inteligencia Artificial — primer acto (00:00–09:30) . Elon Musk: “Ya somos cyborgs, estamos integrados con nuestros computadores y smartphones. Pero el ancho de banda de entrada es demasiado lento”. “Los humanos seremos aburridos y lentos para una Inteligencia Artificial (IA). El lenguaje humano hablado será lentísimo para las IAs, les parecerá como canto de ballenas”. “Hace 40 años, existió el juego pong. Hoy los juegos son foto-realistas con millones de personas jugando en línea simultáneamente. A cualquier tasa de desarrollo que consideres, por extrapolación, la realidad virtual será indistinguible de la realidad. Eso, obien la civilización terminará. Esas son las opciones”. “La velocidad de cambio de la tecnología supera nuestra velocidad de entenderla”. “Los humanos son un gestor de arranque (bootloader) biológico de IA”. | Jack Ma: “Las predicciones del futuro son 99.99% incorrectas. El 0.01% de predicciones correctas es por simple azar”. “AI no es una amenaza, los jóvenes son inteligentes y encontrarán soluciones si existen problemas”. “Los intelectuales de academia (college smart) se preocupan, los astutos de la calle (street smart) se adaptan”. | Opinión: Lo de que el AI nos encontrará aburridos me recuerda la película Her (altamente recomendable). Por otra parte, es cierto que el desarrollo tecnológico avanza a tasas increíbles. Resulta difícil anticipar los próximos 10 años, pero creo que la realidad virtual será una tecnología mucho más presente de lo que se piensa. La complacencia optimista de Ma no ayuda a solucionar los problemas que ya tenemos con IA hoy en día: seguridad, sesgo, cibervigilancia, entre muchos otros. Necesitamos identificar y reconocer los problemas para solucionarlos, no basta con decir “alguien los solucionará”. | . Round 2: Marte (9:30–17:35) . Elon Musk: “Necesitamos tomar las acciones necesarias para perdurar la conciencia hacia el futuro”. “Debemos asegurarnos de ser una especie multiplanetaria, es la única opción segura para la humanidad”. “Tenemos la ventana de posibilidad por primera vez, pero no se sabe por cuánto tiempo más”. “Necesitamos menos del 1% en convertirnos en especie multiplanetaria, es equivalente a invertir entre los gastos de cosmética y de salud”. | Jack Ma: “Está bien enviar 1 millón de personas a Marte, pero hay 6.7 billones de personas en la tierra. Necesitamos mejorar las cosas acá”. | Opinión: En el segundo round, nuevamente Jack Ma cae en una posición un poco conservadora y complaciente. La conquista de la luna produjo en la tierra una serie de avances tecnológicos. Se ha estimado que por cada dólar gastado en la carrera espacial, EEUU recibió 7 a 14 dólares en negocios asociados. Tomando el 10% de esa afirmación, ya es un asunto rentable. Por otra parte, hay un pensamiento que me resulta inquietante. En la tierra existe un equilibrio nuclear entre las grandes potencias debido a que una guerra nuclear aniquila a ambos bandos. ¿Sin embargo, que pasaría entre una guerra nuclear entre la Tierra y Marte? Un planeta podría eliminar completamente la humanidad del otro planeta sin consecuencias. | . Round 3: Trabajo (17:35–22:45) . Jack Ma: “Deberíamos trabajar entre tres días a la semana, 4 horas por día. La electricidad permitió que usáramos mejor el día. AI permitirá que los humanos hagan las cosas que disfrutan y los caracterizan, como la pintura, el baile, y en general el arte”. “En mi vida he visitado unas 300 ciudades. Mi padre visitó unas 30 ciudades, y mi abuelo unas 3 ciudades”. “Primero, tendremos mucho trabajos. Segundo, no necesitaremos tanto trabajo. Tercero, el problema será que las personas vivirán más y tendrán menos hijos”. | Elon Musk: “Tenemos que solucionar el tema de la interface de IA y la mente — neurolink — o nos quedaremos atrás”. | Opinión: Esta fue una de las partes del debate que más me dejó pensando. No la parte de trabajar 4x3 horas, que resulta irrisoria viniendo de alguien que ha celebrabado la cultura de 6 días por 12 horas en China (el llamado 6–9–9 por seis días llegando a las 9 am y yéndose a las 9 pm). La parte que encuentro interesante es cómo hoy en día tenemos el privilegio de conocer otras ciudades, países y culturas que sin duda permite combatir la xenofobia y otros males asociados. Existe una curiosidad natural en viajar y conocer el mundo. Existe una crítica que los “millenials viajan al sudeste asiático”. Pero pensándolo bien, es una decisión económicamente muy racional. ¿Dónde es posible obtener las mayores diferencias culturales y aprendizajes, al menor precio posible? Lo cual nos lleva a que parece que hoy en día las mayores divisiones son políticas y no geográficas. Por otra parte, resulta difícil anticipar cómo serán los trabajos del futuro, pero sin duda muchos de los trabajos de hoy en día serán reemplazados. Más aún, hoy ya existen trabajos extremadamente bien pagados que hace 5 ó 10 años hubieran sonado de ciencia ficción: desde ingenieros de Machine Learning hasta Youtubers. Un último pensamiento: hay que tomar extremo cuidado para evitar la concentración de capital y sobre todo de los datos, que cada vez son una fuente de poder. Y como dijo Montesquieu: “el poder corrompe y el poder absoluto, corrompe absolutamente”. | . Round 4: Educación (22:45–29:50) . Jack Ma: “La forma en que enseñamos educación fue diseñada para el periodo industrial”. “Ya no es importante recordar o calcular: los computadores pueden recordar o calcular más rápido. El humano se caracteriza por ser más creativo y construir cosas”. “Computador tiene un chip, el humano tiene corazón, y es el corazón de donde viene la sabiduría”. “El mayor recurso son las personas y sus cerebros. Tenemos que cambiar la educación para sacar el mayor provecho”. | Elon Musk: “Tratar de aprender a predecir o hacer el futuro”. “Evalúa si lo que estás haciendo te permitirá a predecir el futuro mejor”. “Con neurolink podrás aprender algo inmediatamente, como en The Matrix. La educación hoy en día es demasiada demasiada lento”. “Lo más importante es intentarlo, y ajustar en base al error en tus predicciones”. | Opinión: Opiniones tibias y palabras comunes. Fue el punto más bajo de la discusión. Y respecto a la educación hay tanto por decir. El futuro estará lleno de nuevas y atractivas opciones. Pero no será una realidad completamente distinta. Coexistirá lo antiguo con lo nuevo, como sucede con los hoteles y airbnb, con los taxis y uber/didi/beat/etc., con la televisión y netflix y youtube. Seguirán existiendo las universidades, institutos y centros profesionales, con la incorporación de una mayor flexibilidad y nuevas tecnologías, pero donde el énfasis estará puesto en carreras tradicionales, la presencialidad y el crear comunidades y redes locales. Por otra parte, co-existirán nuevas instituciones virtuales con un énfasis en micro-aprendizajes, en los últimos descubrimientos y tecnologías, y donde se crearán comunidades globales alrededor de pasiones comunes. Por supuesto que la educación debe cambiar, todo el mundo viene diciendo eso desde hace 50 años. El problema es que mientras el mundo del trabajo no lo exija, esos cambios no se materializarán. En aquellos trabajos donde la educación tradicional no basta, como en Machine Learning y Data Science, la educación alternatiiva o en línea comienza cada vez a tomar mayor relevancia. | . Round 5: IA versión 2 (29:45–40:35) . Elon Musk: “Definitivamente los computadores pueden hacer cosas más inteligentes que los humanos”. “Hace 22 años, Deep Blue superó a Kasparov. Hace 10 años, AlphaGo superó al campeón de go 4–1. Actualmente AlphaZero le gana invicto a AlphaGo 100–0. Ahora ya no tiene sentido. […] La superioridad de la inteligencia humana cada vez se reduce a un espacio más pequeño”. “Estamos resolviendo problemas cada vez con más grados de libertad. La realidad es el problema con mayor cantidad de grados de libertad. Quizás estamos en una simulación ahora. Existe una broma al respecto. Si estuviéramos en un juego, la evaluación sería: awesome graphics, confusing plot, slow respawn”. “No me preocupa la sobre-población. El mayor problema que enfrenterá la tierra en 20 años es el colapso de la población”. | Jack Ma: El computador puede ser astuto (clever), pero el humano es inteligente (smarter)”. “La astucia está guiada por el conocimiento, la inteligencia está guiada por la experiencia”. “Los humanos inventamos al computador. No he visto un computador inventar un humano”. “Sería estúpido correr contra un automóvil. Es lo mismo jugar ajedrez o go contra un computador”. “Los humanos son superiores en creatividad y colaboración”. | Opinión: Ma cae de nuevo en los lugares comunes, pero me gusta el ejemplo de correr contra un automóvil. El temor que tenemos hoy de la IA, es el mismo que tenían nuestros padres de las calculadoras que veían inutilizados sus conocimientos de “reglas de cálculo” pero que insistían en la importancia de sacar raíces a mano. Más que nunca, resulta importante saber aprender y adaptarse. Tendremos que redefinir la inteligencia humana constantemente. | . Round 6: Life (40:35–46:00) . Elon Musk: “Creo que los humanos resolverán los problemas de sustentabilidad del planeta. No es complacencia, debemos hacer algo. Pero podemos hacerlo”. “Con neurolink la edad no importará. Podrás salvar tu estado y restaurarlo, como en un juego. Podemos solucionar el tema del envejecimiento, pero no basta con yoga y alimentación. Es necesario cambiar el ADN. ¿La gente estará de acuerdo con manipular el ADN? Ese es el problema. Es necesario detener el reloj del ADN. ¿Tenemos que cambiarlo? Quizás morir es algo bueno. Es bueno tener un ciclo de vida” | Jack Ma: “Las personas inteligentes saben lo que quieren. Las personas sabias saben lo que no quieren”. “Hay que limpiar esta tierra, es un desafío más grande que ir al espacio”. “Está bien hacer errores. Está bien aprender de los errores. Está bien morir”. | Opinión: La conversación sobre la vida eterna y guardar la conciencia se asemeja demasiado a la serie “Altered Carbon”. Y tal como en la serie, eso genera una serie de problemas políticos y humanos al generar un estado anti-natural, o al menos, uno al que los seres humanos no se han enfrentado antes. ¿Cómo castigar a un criminal de por vida? ¿Si la persona está en la mente, que diferencia hace cambiar de cuerpo o “envase”? ¿Qué distribución de poder se obtiene con ricos que perpetúan su riqueza durante siglos? Por otra parte, también aparecen las temáticas de la película de ciencia ficción “Ellysium” con separaciones radicales en el acceso a la tecnología y salud dependiendo de las condiciones económicas. ¿Cómo evitar que las brechas que han ido disminuyendo en los últimos años no cambien de rumbo y comiencen a aumentar nuevamente? Probablemente, la respuesta está en la educación y la política. Educación, para adaptarnos a los tiempos futuros, y saber que podemos y tenemos que exigir mejores y más justas leyes. Y buenos políticos, para hacerlas. | .",
            "url": "https://sebastiandres.github.io/blog/opini%C3%B3n/tecnolog%C3%ADa/2019/09/16/medium-debate-Musk-Ma.html",
            "relUrl": "/opini%C3%B3n/tecnolog%C3%ADa/2019/09/16/medium-debate-Musk-Ma.html",
            "date": " • Sep 16, 2019"
        }
        
    
  
    
        ,"post12": {
            "title": "Reconociendo nuestros privilegios",
            "content": "Hace poco re-compartí en facebook un video que me pareció interesante. No pensé que recibiría mucha atención, e incluso pensé que podía ser un poco cliché. Tanto así que reconozco incluso que no lo vi completo; al mirarlo nuevamente con mayor detalle me di cuenta que los últimos 40 segundos tienen un texto bíblico. El video es el siguiente: . Carrera por los 100 dólares ¿Cuánto influyen nuestros privilegios? . Uno de mis amigos de facebook respondió con vehemencia, manifestando “lo inútil que eran estos videos que no cambian nada” y que “los ‘buenistas’ han hecho un conjunto de leyes completamente injusto y arbitrario tratando de ‘arreglar’ una supuesta diferencia”. Intercambiamos varios mensajes al respecto, pero el tono de la conversación comenzó a subir y probablemente ambos quedamos con la idea de que el otro no escucha razones. Pero no deja de ser válido el auto-cuestionarse: ¿Existen estas diferencias o privilegios? ¿Porqué son estas diferencias importantes y deberían reconocerse? Me parece que el primer punto es evidente y está fuera de debate. Las diferencias existen debido a las distintas configuraciones familiares, sociales y económicas, y con toda seguridad siempre existirán. Ese no es el punto en cuestión. Respecto al segundo punto, existe un webcomic del ilustrador Toby Morris que también habla sobre los privilegios y que lo ilustra de otra manera. El enlace original está en este link y encontré la versión traducida en este otro sitio. Coloco acá las imágenes para hacer más directa y lineal la lectura: . . . . . On a Plate — https://marcianosmx.com/en-bandeja-de-plata-una-historia-sobre-los-privilegios/ . El punto central del video y del comic es el mismo. De manera frecuente, quien ha tenido privilegios ignora que los ha tenido, y piensa que todo su éxito ha sido únicamente personal. Esta situación ha sido incluso estudiada, como muestra el siguiente video del investigador y sicólogo Paul Piff: . Paul Pill — ¿El dinero nos hace “malvados”? . Un resumen muy corto del video sería: (1) en un juego de monopoly con condiciones desiguales para los jugadores, los ganadores atribuyen su éxito a condiciones innatas y no a la gran ventaja que arbitrariamente se les ha otorgado, es decir, no reconocen sus privilegios, y (2) en diversos experimentos las poblaciones más ricas tienden a demostrar menos empatía hacia otros. No es que ser rico te obligue a ser “malvado” ni que para ser rico haya que ser “malvado”, sino que el cerebro necesita racionalizar los hechos para poder justificar que exista una diferencia. De manera natural, los humanos buscamos evitar aquello que nos produce alguna emoción conflictiva, y resulta cognitivamente conflictivo admitir que el éxito puede deberse, además de trabajo y esfuerzo, a variables completamente fuera de nuestro control. ¿Es más importante la suerte que el talento innato? Un estudio publicado por 3 italianos en 2018 responde parcialmente la pregunta sobre la importancia de la suerte y el talento. El artículo original de Pluchino, Biondo y Raspisarda es éste, y aunque hay un buen resumen en este artículo, mencionaré los principales puntos a continuación. La idea central del artículo es cuantificar el rol de la suerte y el talento en el éxito de una persona. Para ello hicieron un modelo muy simple en el cual simularon la evolución profesional de 1000 personas durante 40 años. Cada individuo poseía distinto grado de talento natural fijo, y que este talento les permitiría sacar mayor provecho de las oportunidades de suerte en su (simulada) vida. Todos los individuos comenzaban con 10 unidades de éxito pero distinto nivel de talento, y cada 6 meses, los individuos recibían al azar una cierta cantidad de eventos de buena o mala suerte. En caso de buena suerte, su éxito se incrementa proporcionalmente a su talento. En caso de mala suerte, su éxito se dividía a la mitad. ¿Qué pasó al cabo de 40 años? Los individuos que poseían los mayores valores de éxito eran — en promedio — sólo ligeramente más talentosos que una persona promedio. De hecho tener un muy alto talento sólo en un 3% de los casos permitía estar en el grupo de los más exitosos. Raya para la suma: la distribución inicial de talento influía mucho pero mucho menos que la suerte. Sin embargo, resulta natural elevar algunas críticas contra la simpleza del experimento, pues el resultado depende en gran medida de los valores elegidos como condiciones iniciales para el experimento y está lejos de representar la complejidad de la vida humana. El supuesto que el valor inicial de éxito sea el mismo para todos es una simplificación enorme. Todos estamos expuestos a rachas de mala suerte: enfermedades personales o familiares, despidos, accidentes, deudas imprevistas, por citar sólo algunos. Estas situaciones finalmente impidan que las personas puedan ejercer y contribuir con sus talentos a la sociedad. Esto lo expone con gran claridad el historiador Rutger Bregman en el siguiente video: . Rutger Bregman — La pobreza no es falta de carácter. . Rutger Bregman menciona que la pobreza no es una falta de educación, o un defecto de personalidad de ciertas personas. Las condiciones de pobreza producen un efecto similar a consumir alcohol o una noche sin dormir; reducen la capacidad intelectual de manera transitoria. No se menciona porqué, pero imagino que debe estar relacionado a los químicos liberados en condiciones de stress. Adicionalmente, Rutget menciona que la pobreza induce una “mentalidad de escasez” que aniquila la capacidad de planificación a futuro; sólo se atiende a la supervivencia y a lo inmediato. Retomando el video inicial, y para no perder el hilo, la pobreza y los privilegios, son un problema que cuesta caro porque generan una enorme pérdida de potencial humano. ¿Y cómo estamos en Chile hoy en día? . Daniel Matamala en esta columna de La Tercera, relata los resultados de Meneses, Blanco y Paredes. Para ello, usaron bases de datos del Simce, de la PSU y del seguro de cesantía. Y se reproduce lo que de ya sabíamos: el sueldo percibido reproduce la estructura social y no los talentos de las personas. Y resulta difícil decirlo mejor que el periodista, que concluye: «Estas no son anécdotas ni impresiones. Son datos duros de más de 75 mil chilenos, y que probablemente subestiman la realidad, porque se refieren sólo a ingresos del trabajo, y no a otros como acciones, dividendos o herencias, que son mayores entre quienes vienen de un estrato alto. . Estos datos desmienten la idea de una sociedad que dice recompensar el talento y el esfuerzo de sus hijos. En el mercado del trabajo pesan el elitismo disfrazado de “roce social”, la endogamia vestida de “redes” y la discriminación enmascarada como “buena presencia”.» . Los datos dicen que existe una movilidad social mucho más reducida de lo que debería. Donde el talento de muchos se pierde bajo el peso de sus carencias, de falta de condiciones y privilegios, y por no poseer un colchón económica para superponerse a las malas rachas. Y para peor, donde frecuentemente los privilegiados no se reconocen como tal. .",
            "url": "https://sebastiandres.github.io/blog/opini%C3%B3n/2019/09/09/medium-privilegios.html",
            "relUrl": "/opini%C3%B3n/2019/09/09/medium-privilegios.html",
            "date": " • Sep 9, 2019"
        }
        
    
  
    
        ,"post13": {
            "title": "Finanzas Modernas",
            "content": "Confieso que no me siento particularmente educado de economía y finanzas como para hacer un post sobre este tema. De hecho, la única asignatura que he reprobado en mi vida fue “Ingeniería Económica”. . Soy el primero en reconocerlo, encuentro que las finanzas son un tema particularmente aburrido. Pero en todo juego es necesario conocer las reglas para saber cuáles estrategias te acercan más a tus metas. Por eso “minimizar” el tiempo dedicado a las finanzas “maximizando” los beneficios es la mejor idea. Conversando con algunos amigos y conocidos — incluso de la banca — me he di cuenta que no todos conocen los distintos recursos que han ido apareciendo respecto a como informarse y manejar finanzas de manera moderna, y que agradecen que les haya contado de estas webs y apps. Este post, al igual que la de Consejos de libros al mejor precio, sirve para facilitar la difusión de estos tips. . Explicado con Manzanitas . Conocí “Con Manzanitas” a través de alguno de sus posts virales en facebook del 2015. Su autor, Matias Godoy, publicaba una serie de posts explicando el caso cascada con manzanitas, las empresas zombies con manzanitas, y mucho otros, y analizaba la actualidad de manera simple y directa. Gracias a sus consejos, estoy revisando las condiciones del crédito hipotecario que tomé hace apenas un año: ¡la tasa ha bajado de 3.2% a 1.7%, y eso se refleja en casi 50.000 pesos menos en contribuciones al mes! Matías publicó hace poco un libro Cómo invertir explicado con Manzanitas donde en 200 páginas explica de manera simple distintos aspectos de la economía y de cómo invertir. . APV . Sin necesidad de meterse en polémicas sobre la larga lista de problemas de las AFP, resulta innegable la necesidad de un ahorro complementario para pasar una jubilosa jubilación. En caso que no lo conozcas, el APV es un ahorro adicional, en el cual el estado complementa el ahorro que tú aportes: . En el régimen A, el estado te deposita de vuelta hasta el 15% de lo que ahorres en un año con un tope de 6 UTM (300 lucas al año). Es equivalente a tener un 15% de interés adicionales en la rentabilidad de tu inversión. | En el régimen B, el estado te realiza una rebaja de los impuestos, con un tope de 600 UF (16.8 millones). Esto le sirve a las personas que tienen una renta mensual elevada. | . ¿Cuál régimen te conviene? Depende de cuánto ganes mensualmente y de cuánto estás dispuesto a invertir. La gracia es que siempre puedes retirar el ahorro en APV de manera anticipada, así que puedes crear un colchón económico importante para la jubilación, pero en caso de emergencia también puedes utilizarlo. . MACH . MACH es una cuenta y app respaldada por BCI. No tiene página web, sino que debes configurar todo desde el celular. Es una “monedero digital”, funciona sólo con la plata que has depositado desde tu banco o que te han pagado otras personas; no puedes endeudarte. Sirve para pagar en Chile pero también en el extranjero, y tiene la gracia que no piden antecedentes ni tiene costos asociados. Es increíblemente fácil, en 5 minutos ya tienes la app configurada. Para pagarle o cobrarle a una persona, la buscas entre tus contactos, colocas el monto y listo. Es ideal para pagarse entre amigos para dividir cuentas de restoranes, regalos y viajes, además de pago de cuentas en línea, entre otros. Tiene un sistema de referidos, por lo que si usas el link me darán 1.000 pesos de los cuales puedes cobrarme la mitad mediante la misma aplicación de MACH; así podrás probar inmediatamente cómo funciona. Warning: el botón de “cobrar” de MACH es un poco adictivo. . Fintual . En Fintual no tienen oficinas comerciales físicas, todo se hace en línea. Tampoco tienen una “app”, sino que desde la página web revisas tus inversiones y certificados. Su gran ventaja es que tienen costos muy bajos y una buena rentabilidad. Son los chicos estudiosos-pero-cool de la banca, postearon unas clases de economía en youtube y además tienen un podcast. Sus series de inversión tienen nombres cool (Risky Norris, Moderate Pitt, Conservative Cloney, Very Conservative Streep), y aplican para inversión tradicional y de APV. Me gusta que hacen mucha educación sobre finanzas, de una manera clara. Yo estoy cerrando el APV que había contratado en otro banco y que debido a costos y seguros adicionales, prácticamente no rentó en 3 años, y traspasándolo a fintual. . También tienen un sistema de referidos. Al usar el link me darán el 1% de tu inversión durante el primer año, de lo cual puedes cobrarme la mitad mediante la aplicación de MACH. Así tendrás una rentabilidad adicional del 0.5%. WIN-WIN. . ¡Espero que alguno de estos consejos les hayan sido útiles, y si conocen de alguno que consideren importante y no esté acá, ¡no duden en contármelo! .",
            "url": "https://sebastiandres.github.io/blog/consejos-finanzas/",
            "relUrl": "/consejos-finanzas/",
            "date": " • Sep 3, 2019"
        }
        
    
  
    
        ,"post14": {
            "title": "Lo que nos motiva a aprender y trabajar",
            "content": "Estoy leyendo “Who Own the Learning” de Alan November. La anécdota inicial del libro me encanta. Alan cuenta que tuvo que volver a la escuela, durante el verano, para reprender un alumno que había entrado sin autorización a la sala de computación. Sin embargo, el estudiante no había realizado daños, sino que simplemente había pasado varias horas sentado frente a la pantalla aprendiendo en una profunda concentración. Era una paradoja: ¿tenía que regañar a un alumno por hacer lo que debe realizarse en una escuela, sólo por no respetar las reglas? Este estudiante estaba aprendiendo por cuenta propia, con una alta motivación intrínseca e incluso contra las mismas restricciones que la escuela le imponía. El estudiante mostraba con orgullo el código que había desarrollado, y atribuía su facilidad para aprender porque el computador le entregaba rápidamente retroalimentación sobre cada línea en su código. Creo que a todos nosotros en el mundillo de la informática nos ha pasado un momento similar, el momento en que algo hace click en la cabeza y nos hace gritar eureka, embriagados con el haber aprendido algo por nuestra propia cuenta gracias a la retroalimentación inmediata en la pantalla. Ese estudiante, en unas horas, pudo aprender más por su propia cuenta que en un semestre de clases gracias a su concentración, interés y motivación. . Lo que me ha sorprendido al leer el libro es que los elementos principales de la narrativa son los mismos de un video que había visto hace un tiempo y que me había causado mucho impacto: . Daniel H. Pink — The surprising truth about what motivate us (11 minutos, 2010) . El libro de November, y el video de Daniel Pink, llegan a la misma conclusión: lo que nos motiva como trabajadores y cómo estudiantes el sentido (purpose), la autonomía (autonomy) y la maestría (mastery). . Buscando el Sentido: ¿Cuántas veces no hemos estado en una clase que no tiene ninguna razón, o aprender conceptos, nombres o fechas históricas que sabemos que olvidaremos apenas se realice la prueba? Resulta para todos una pérdida de tiempo; para el docente que observa el desinterés de los estudiantes y de los estudiantes que perciben al docente como una máquina que pasa contenidos sin reflexionar sobre la importancia de éstos. Como en todo trabajo, para lograr una motivación profunda, es necesario que exista un sentido. Alan propone que las tareas y proyectos tengan un alcance global, de manera que no sea algo que las tareas sólo sean entre el alumno y el profesor, y que el contenido de las tareas puedan perdurar en el tiempo y tener un sentido mayor. Por ejemplo, (1) armando videos resumen de los contenidos que estudiantes en otras partes del mundo puedan mirar, (2) creando apuntes por turnos para compartir con los otros compañeros, (3) creando wikis o apuntes de la materia que mejorar año año, o (4) realizando proyectos que beneficien directamente a una comunidad. En el caso de cursos de computación, el tener repositorios de código abierto que los mismos estudiantes puedan actualizar y mirar, incluso si no están tomando formalmente el curso se ha vuelto una práctica común. . Alcanzando la Maestría: las personas buscamos perfeccionarnos para volvernos mejor en lo que hacemos, incluso al costo de accidentes y lesiones. Por ejemplo, practicando instrumentos musicales, trucos de magia, rutas de parkour o complejas piruetas en skate, que no tienen mayor valor práctico que el saber que se ha logrado dominar una habilidad. Sin embargo, para quien ha logrado avanzar en su pericia y habilidad, resulta una increíble (y adictiva) satisfacción. En términos del aprendizaje, resulta importante no pasar el contenido de un curso de manera rígida y no permitiendo a los estudiantes profundizar y alcanzar el nivel de maestría que desean en sus conocimientos. El libro plantea que los niños buscarán alcanzar la maestría de una materia cuando, por ejemplo, deben explicárselo a sus pares en videos o compartiendo sus notas. De alguna manera, se relaciona con los principios de Gamification que se usan para todo tipo de aprendizajes en plataformas y apps, como por ejemplo Duolingo. El deseo de superar “sólo otro nivel” se mantiene independientemente del nivel en el que nos encontremos y hace que siempre busquemos superarnos. . Logrando la Autonomía: es el deseo de dirigir nuestras propias acciones. Tanto como estudiantes como trabajadores, tenemos una idea clara sobre las cosas que deben hacerse, la prioridad que tienen cada una de éstas y el tiempo que será necesario. No existe nada más frustrante que tener una figura externa que dicte paso por paso (y en el orden equivocado) las tareas a realizar, porque ese orden que debiera servir para todos en la práctica no sirve para ninguno. Para que los estudiantes logren autonomía hay que entregarles libertad, lo cual muchas veces resulta atemorizante para los docentes. Sin embargo, los beneficios exceden todo los riesgos. Como profesor, he observado esto de manera directa. Cuando uno entrega una tarea con 10 preguntas a responder, el estudiante sólo explora su capacidad de responder lo que el profesor quiere oír y el estudiante sólo puede como máximo alcanzar el nivel esperado por el profesor. Cuando uno propone que realicen proyectos que les sean de su interés, deben explorar cómo plantear el problema, como resolverlo, de donde obtener información fiable, cómo presentarlo de la mejor manera, y muchas veces, exceden ampliamente el nivel y profundidad que uno como docente se esperaba. . Bonus: Creando este artículo encontré una ted talk de Alan November, donde Alan November cita a Daniel Pink. Así que, efectivamente, ¡había un enlace directo entre ambos! . Alan November — Who Owns the Learning (11 minutos, 2011) .",
            "url": "https://sebastiandres.github.io/blog/november-aprender/",
            "relUrl": "/november-aprender/",
            "date": " • Apr 27, 2019"
        }
        
    
  
    
        ,"post15": {
            "title": "Consejos de libros al mejor precio",
            "content": ". Para mi sorpresa, hay muchas personas que no conocen los 2 principales sitios que uso para abastecerme de libros a buen precio: BP Digital y BookDepository. ¡Ojalá este post sea útil en difundir esta información! . BP Digital . BP Digital — Biblioteca Pública Digital — permite pedir libros en formato electrónico. El catálogo es bastante amplio y recientemente me sorprendí de encontrar los 3 libros que pensaba comprar para leer en el verano. Por ejemplo, se encuentran las colecciones de Roberto Ampuero, Hernan Rivera Letelier, Isabel Allende, Roberto Bolaño, Phillip K Dick, Isaac Asimov, George R. R. Martin, incluyendo al reciente Yuval Noah Harari. Tienen cerca de 13,000 libros, aunque la mayor parte sólo en español. . Pros: es completamente gratis. También me gusta que los libros sean prestados durante un periodo fijo (15 días, + 7 de renovación) porque permite no holgazanear demasiado y terminar la lectura pedida. | Contras: Sólo en formato digital y requiere un rut chileno o identificador válido para residentes en Chile. Tienen muy pocos en idioma distinto al español. | . Link: http://www.bpdigital.cl/ . Consejos: . Leer un libro a la vez, puesto que el periodo de préstamo es corto. | Pedir varios libros al mismo tiempo, y poner en reserva los libros de alta demanda, porque puede demorar en liberarse el deseado. | BookDepository . BookDepository (BD) es una librería electrónica con más de 20 millones de libros y que hace envíos gratis a todo el mundo sin monto mínimo. Eso hace increíblemente más fácil evaluar si conviene comprar un libro o no en comparación con las librerías locales. Por lo que he comparado, BD es hasta un 50% más barato que comprar el libro en Chile, con la ventaja (o desventaja, según se mire) de contar con el libro en principalmente en inglés (o el idioma original). Permite comprar con tarjeta de crédito, o con paypal, y no he tenido ningún problema hasta ahora (+20 libros). Algunos ejemplos: . Artemis — Andy Weir. BD: 14.77 USD. Chile: &gt; 30 USD. | Surely you’re joking Mr Feynman — Richard Feynman. BD: 14.32 USD. Chile: &gt;25 USD. | The man in the high castle — Phillip K. Dick. US$11.55; Chile: &gt;30 USD. | Alice’s Adventures in Wonderland — Lewis Carroll. BD: 4.17 USD; Chile: &gt; 10 USD. | . Además, permite acceder fácilmente a libros que no están en Chile, como Weapons of Math Destruction de Cathy O’Neil, The Dad Lab de Sergei Urban, o la colección de novelas gráficas Earth Before Us de Abby Howard. Mención especial para los libros de Feynman, que deberían ser lectura obligatoria en todas las carreras STEM: consideraciones profundas sobre la ciencia, la física y la matemática, además de mil situaciones humorísticas. Un espíritu crítico e irreverente. . Pros: El precio indicado es el precio final (incluye envío). Se tiene un catálogo muy grande y permite hacer reservas (pre-order). Los libros llegan en perfecto estado y pueden incluso devolverse (aunque nunca he hecho uso de esta funcionalidad). | Contras: Se demora entre 2 y 5 semanas en llegar a Chile. | . Link: https://www.bookdepository.com/ . Consejos: . Revisar bien el idioma del libro. En una oportunidad encargué un libro y aunque el título venía en inglés, el contenido venía en alemán. Al revisar, efectivamente en la página se indicaba que el libro venía en idioma alemán. | Revisar la sección de ofertas (bargains) que tiene algunos libros interesantes a precios inmejorables. Sobretodo para releer a los clásicos en idioma original. |",
            "url": "https://sebastiandres.github.io/blog/consejos-libros/",
            "relUrl": "/consejos-libros/",
            "date": " • Jan 19, 2019"
        }
        
    
  
    
        ,"post16": {
            "title": "Test 1: Post mediante Markdown",
            "content": "Configuración básica . El archivo de un post files debe tener el formato _posts/AAAA-MM-DD-some-filename.md . Donde AAAA es el año con 4 dígitos, MM es el mes con 2 dígitos, DD es el día con 2 dígitos, y some-filename es un nombre de referencia, más que nada para recordarte de que se trataba el post. El título real se indica adentro). La extensión .md se usa para archivos markdown, como es esperable. El inicio del archivo debe tener los siguiente: . hide: false toc: false layout: post title: &quot;Test 1: Post mediante Markdown&quot; description: Un ejempo minimal usando markdown con fastpages. categories: [fastpages, markdown] toc: false comments: true . Formato básico . Se pueden usar cursivas, negritas, negritas cursivas, código. También notas a pie de página 1. También una línea horizontal: . . Links . Se pueden crear links o simplemenente https://www.markdownguide.org/cheat-sheet/, (https://www.markdownguide.org/cheat-sheet/). . Listas . Acá hay una lista (regular): . item 1 | item 2 | . Acá hay una lista numerada: . item 1 | item 2 | Código . Texto preformateado general: . # Do a thing in a programming language do_thing() . Código de python: . # Prints &#39;2&#39; print(1+1) . Imágenes . . Videos . Tablas . Columna 1 Columna 2 . Una cosa | Otra cosa | . Una cosa más | Otra cosa más | . Citas y otras formas de destacar . Citas: . Esta es una cita . Alerta: . . Puedes incluir alertas Información: . . Puedes destacar información Warning: . . Warning: There will be no second warning! Important: . . Important: Pay attention! It&#8217;s important. Consejo: . . Tip: This is my tip. Nota: . . Note: Take note of this. Tweets . Playing around with @streamlit. Amazing how they have simplified and integrated everything. . &mdash; Sebastian Flores (@sebastiandres) July 8, 2021 Notas a pie de página . Esta es la nota al pie de página. &#8617; . |",
            "url": "https://sebastiandres.github.io/blog/markdown-test/",
            "relUrl": "/markdown-test/",
            "date": " • Jan 2, 2019"
        }
        
    
  
    
        ,"post17": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://sebastiandres.github.io/blog/jupyter/2019/01/01/test.html",
            "relUrl": "/jupyter/2019/01/01/test.html",
            "date": " • Jan 1, 2019"
        }
        
    
  
    
        ,"post18": {
            "title": "An Example Markdown Post",
            "content": "Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://sebastiandres.github.io/blog/fastpages/markdown/2019/01/01/test-markdown-post.html",
            "relUrl": "/fastpages/markdown/2019/01/01/test-markdown-post.html",
            "date": " • Jan 1, 2019"
        }
        
    
  
    
        ,"post19": {
            "title": "Template",
            "content": "Configuración básica . El archivo de un post files debe tener el formato _posts/AAAA-MM-DD-some-filename.md . Donde AAAA es el año con 4 dígitos, MM es el mes con 2 dígitos, DD es el día con 2 dígitos, y some-filename es un nombre de referencia, más que nada para recordarte de que se trataba el post. El título real se indica adentro). La extensión .md se usa para archivos markdown, como es esperable. El inicio del archivo debe tener los siguiente: . hide: false toc: false layout: post title: &quot;Test 1: Post mediante Markdown&quot; description: Un ejempo minimal usando markdown con fastpages. categories: [fastpages, markdown] toc: false comments: true . Formato básico . Se pueden usar cursivas, negritas, negritas cursivas, código. También notas a pie de página 1. También una línea horizontal: . . Links . Se pueden crear links o simplemenente https://www.markdownguide.org/cheat-sheet/, (https://www.markdownguide.org/cheat-sheet/). . Listas . Acá hay una lista (regular): . item 1 | item 2 | . Acá hay una lista numerada: . item 1 | item 2 | Código . Texto preformateado general: . # Do a thing in a programming language do_thing() . Código de python: . # Prints &#39;2&#39; print(1+1) . Imágenes . . Videos . Tablas . Columna 1 Columna 2 . Una cosa | Otra cosa | . Una cosa más | Otra cosa más | . Citas y otras formas de destacar . Citas: . Esta es una cita . Alerta: . . Puedes incluir alertas Información: . . Puedes destacar información Warning: . . Warning: There will be no second warning! Important: . . Important: Pay attention! It&#8217;s important. Consejo: . . Tip: This is my tip. Nota: . . Note: Take note of this. Tweets . Playing around with @streamlit. Amazing how they have simplified and integrated everything. . &mdash; Sebastian Flores (@sebastiandres) July 8, 2021 Notas a pie de página . Esta es la nota al pie de página. &#8617; . |",
            "url": "https://sebastiandres.github.io/blog/markdown-test/",
            "relUrl": "/markdown-test/",
            "date": " • Dec 31, -0001"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Acerca de",
          "content": "Sobre mí . ¡Hola! Soy sebastiandres. En este blog encontrarás publicaciones diversas, de distintos temas de tecnología, literatura y opinión. Me encantaría saber que opinas tú al respecto. Coméntame si hay algo en lo que pueda ayudarte. . https://linktr.ee/sebastiandres . Sobre el sitio . Este sitio ha sido creado usando fast-pages. He publicado algunas cosas sobre cómo funciona o cómo personalizarlo. Puedes encontrar temas específicos mediante el buscador, o con la etiqueta fastpages. . También he realizado algunas modificaciones: . He tomado pedazos de código prestados del tema Mediumish para mostrar los artículos destacados. | Hay imágenes de sitios como LoremIpsum | .",
          "url": "https://sebastiandres.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Charlas",
          "content": "He participado en las siguientes charlas: . UNSA Argentina - 09 Abril 2021. Charla “Sin límites con Python” realizada a estudiantes de primer año de la Universidad de Salta en Argentina, para contarles sobre python y algunas de las cosas que se pueden hacer. | PyCon Argentina - Noviembre 2020. Charla “Coding as a Service: Librería pypsdier, aprendizajes y metodología” realizado en la Pycon Argentina 2020 sobre mi proyecto pypsdier y en general sobre cómo hacer una librería científica para que sea usada por otros usuarios no técnicos. | Pycon Colombia - 8 Mayo 2020. Charla “¿Cómo hacer encuestas interactivas en Jupyter + RISE? 3 experimentos” realizada en la Pycon Colombia 2020, sobre como mezclar Jupyter, RISE y encuestas. | Universidad Adolfo Ibáñez - 24 Octubre 2019. Charla “Matrices en la vida real” realizada a estudiantes de primer año, sobre aplicaciones de las matrices en la industria. | Meetup Python (2/2) - 27 abril 2016. Charla sobre la librería sklearn, para el meetup de Python Valparaíso. | Meetup Python (1/2) - 30 marzo 2016. Charla sobre la librería pandas, para el meetup de Python Valparaíso. | . En cada caso, en el enlace podrás seleccionar el modo de visualización del contenido (video, slides, código, etc.). .",
          "url": "https://sebastiandres.github.io/blog/charlas/",
          "relUrl": "/charlas/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Enlaces",
          "content": "Inspirado por oink.in, acá iré poniendo algunos links de interés. . Lunes 26 Julio 2021: | calmcode.io/: Videotutoriales de herramientas para opensource. Aprendí de la librería chime. . | Sábado 24 Julio 2021: ideasgrab.com/: Repilación de +3500 ideas desde 2017. | . | .",
          "url": "https://sebastiandres.github.io/blog/enlaces/",
          "relUrl": "/enlaces/",
          "date": ""
      }
      
  

  

  

  

  
  

  
      ,"page9": {
          "title": "Proyectos",
          "content": "Gráficos xkcd: Un web app para hacer gráficos tipo xkcd. Creado usando la librería streamlit y matplotlib. | Code snippets: Un web app con ejemplos de código de streamlit. Listo para copiar, pegar y desarrollar la siguiente web app. | linktree emulator: El emulador pequeño de linktree. Permite presentar opciones interactivas en html desde github. | ppt to rise library y web app: Para convertir una presentación powerpoint a RISE (Jupyter Notebook). | pypsdier: Librería para resolver ecuaciones diferenciales parciales de restricción-difusión en partículas esféricas con catalizadores inmobilizados. Un proyecto colaborativo con aplicaciones industriales. | polite: Sistema de encuestas experimental minimalista. | .",
          "url": "https://sebastiandres.github.io/blog/proyectos/",
          "relUrl": "/proyectos/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
  

  

  

  

  
  

  
      ,"page18": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://sebastiandres.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

  
  

}